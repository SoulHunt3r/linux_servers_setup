---
# This Playbook runs all the common plays in the deployment

- name: Install Java 1.7
  yum: name=java-1.7.0-openjdk state=present

- name: add group "tomcat"
  group: name=tomcat

- name: add user "tomcat"
  user: name=tomcat group=tomcat home=/usr/share/tomcat createhome=no
  become: True
  become_method: sudo

- name: Download Tomcat
  get_url: url=http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.61/bin/apache-tomcat-7.0.61.tar.gz dest=/opt/apache-tomcat-7.0.61.tar.gz

- name: Extract archive
  command: chdir=/usr/share /bin/tar xvf /opt/apache-tomcat-7.0.61.tar.gz -C /opt/ creates=/opt/apache-tomcat-7.0.61

- name: Symlink install directory
  file: src=/opt/apache-tomcat-7.0.61 path=/usr/share/tomcat state=link

- name: Change ownership of Tomcat installation
  file: path=/usr/share/tomcat/ owner=tomcat group=tomcat state=directory recurse=yes

- name: Configure Tomcat server
  template: src=server.xml dest=/usr/share/tomcat/conf/
  notify: restart tomcat

- name: Configure Tomcat users
  template: src=tomcat-users.xml dest=/usr/share/tomcat/conf/
  notify: restart tomcat

- name: Install Tomcat init script
  copy: src=tomcat-initscript.sh dest=/etc/init.d/tomcat mode=0755

- name: Start Tomcat
  service: name=tomcat state=started enabled=yes

- name: deploy iptables rules
  template: src=iptables-save dest=/etc/sysconfig/iptables
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'"
  notify: restart iptables

- name: insert firewalld rule for tomcat http port
  firewalld: port={{ http_port }}/tcp permanent=true state=enabled immediate=yes
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

- name: insert firewalld rule for tomcat https port
  firewalld: port={{ https_port }}/tcp permanent=true state=enabled immediate=yes
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

- name: wait for tomcat to start
  wait_for: port={{http_port}}

- name: Create the hosts file for all machines
  template: src=hosts.j2 dest=/etc/hosts

- name: Create the repository for 10Gen
  copy: src=10gen.repo.j2 dest=/etc/yum.repos.d/10gen.repo

- name: Create the EPEL Repository.
  copy: src=epel.repo.j2 dest=/etc/yum.repos.d/epel.repo

- name: Create the GPG key for EPEL
  copy: src=RPM-GPG-KEY-EPEL-6 dest=/etc/pki/rpm-gpg

- name: Create the mongod user
  user: name=mongod comment="MongoD"

- name: Create the data directory for the namenode metadata
  file: path={{ mongodb_datadir_prefix }} owner=mongod group=mongod state=directory

- name: Install the mongodb package
  yum: name={{ item }} state=installed
  with_items:
   - libselinux-python
   - mongo-10gen
   - mongo-10gen-server
   - bc
   - python-pip

- name: Install the latest pymongo package
  pip: name=pymongo state=latest use_mirrors=no

- name: Create the iptables file
  template: src=iptables.j2 dest=/etc/sysconfig/iptables
  notify: restart iptables

- name: Download EPEL Repo - Centos/RHEL 6
  get_url: url=http://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm dest=/tmp/epel-release-latest-6.noarch.rpm
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'"

- name: Install EPEL Repo - Centos/RHEL 6
  command: rpm -ivh /tmp/epel-release-latest-6.noarch.rpm creates=/etc/yum.repos.d/epel.repo
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'"

# Download and install EPEL for Centos/RHEL version 7
- name: Download EPEL Repo - Centos/RHEL 7
  get_url: url=http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm dest=/tmp/epel-release-latest-7.noarch.rpm
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

- name: Install EPEL Repo - Centos/RHEL 7
  command: rpm -ivh /tmp/epel-release-latest-7.noarch.rpm creates=/etc/yum.repos.d/epel.repo
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

- name: Install libselinux-python
  yum: name=libselinux-python

